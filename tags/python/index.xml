<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on WY Seo Blog</title>
    <link>https://lucaseo.github.io/tags/python/</link>
    <description>Recent content in python on WY Seo Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© Wonyoung Seo 2021</copyright>
    <lastBuildDate>Wed, 10 Feb 2021 14:29:33 +0900</lastBuildDate><atom:link href="https://lucaseo.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[KR] 알고리즘 복잡도</title>
      <link>https://lucaseo.github.io/posts/2021-02-10-complexity/</link>
      <pubDate>Wed, 10 Feb 2021 14:29:33 +0900</pubDate>
      
      <guid>https://lucaseo.github.io/posts/2021-02-10-complexity/</guid>
      <description>애매모호하게만 알고 있는 자료구조를 다시 공부하고 정리하는 포스트입니다. 잘 못 이해하고 있는 부분이 있다면 주저없이 지적 부탁 드립니다 :)
 1. 알고리즘 복잡도 1.1. 개념 1.1.1. 알고리즘 복잡도 계산이 필요한 이유  하나의 문제를 푸는 방법(알고리즘)은 다양할 수 있음. 여러가지 방법 중 어느 방법이 더 좋은지를 분석하기 위해 복잡도를 정의하고 계산함. 어느 것이 더 좋은 알고리즘인지 판단하는 기준이 됨.  1.1.2. 알고리즘 복잡도를 계산하는 방식  공간 복잡도 (space complexity)  알고리즘이 사용하는 메모리 사이즈   시간 복잡도 (time complexity)  알고리즘 실행 속도 특히, 시간 복잡도에 대한 이해는 필수    1.</description>
    </item>
    
    <item>
      <title>[KR] Python으로 구글 스프레드시트 연동하기 (ft. gspread)</title>
      <link>https://lucaseo.github.io/posts/2020-04-12-python-spreadsheet-gspread/</link>
      <pubDate>Sun, 12 Apr 2020 14:24:01 +0900</pubDate>
      
      <guid>https://lucaseo.github.io/posts/2020-04-12-python-spreadsheet-gspread/</guid>
      <description>0. Motivation Who&amp;rsquo;s Good에서는 ESG리서쳐와 분석가/개발자 간에 데이터를 주고 받는 일이 매우 빈번하다. 특히 기업 관련 뉴스 데이터와, 다양한 소스로부터 수집하는 ESG 관련 데이터에 대한 QC를 진행하고 결과를 DB에 적재하는 과정이 있다. 엑셀에서 작업한 데이터를 저장하고, 슬랙으로 전달하는 여러 단계와 여러 사람들을 거치다 보니 주고받은 파일명이 뒤죽박죽인 아주 원초(?)적인 문제부터, 데이터가 언제 업데이트 되었는지 추적이 불가능한 상황도 발생하면서 마음 한 켠에 찝찝함이 남아있는 나날이 계속 되었다. 언제 어디선가 불시에 문제가 생기지는 않을까 하는 두려움.</description>
    </item>
    
    <item>
      <title>[KR] Streamlit 웹 어플리케이션 배포하기 (feat. Heroku)</title>
      <link>https://lucaseo.github.io/posts/2020-03-29-deploy-streamlit-to-heroku/</link>
      <pubDate>Fri, 13 Mar 2020 14:24:01 +0900</pubDate>
      
      <guid>https://lucaseo.github.io/posts/2020-03-29-deploy-streamlit-to-heroku/</guid>
      <description>Source: streamlit.io   Streamlit 배포하기 Streamlit의 주요 기능을 살펴보았던 지난 포스트에 이어, 이번 포스트에서는 Streamlit으로 만든 간단한 웹어플리케이션을 Heroku에 배포하는 과정을 다루어보고자 한다.
&amp;amp;nbsp
 사전 준비사항 들어가기에 앞서 2가지 사전 준비 사항이 있다.
사전 준비 1: Streamlit 웹 어플리케이션 튜토리얼을 진행하기에 앞서, Streamlit기반의 아주 아주 간단한 시각화 웹 어플리케이션을 만들어보았다. 로컬에서 작동시킨 웹 어플리케이션은 다음과 같다. 해당 어플리케이션의 코드는 링크에서 참고 가능하다.
 Main Page  데이터셋에 대한 설명을 간단히 소개한다.</description>
    </item>
    
    <item>
      <title>[KR] 파이썬 웹어플리케이션 맛보기 (feat. Streamlit)</title>
      <link>https://lucaseo.github.io/posts/2020-03-13-intro-to-streamlit/</link>
      <pubDate>Fri, 13 Mar 2020 14:24:01 +0900</pubDate>
      
      <guid>https://lucaseo.github.io/posts/2020-03-13-intro-to-streamlit/</guid>
      <description>Streamlit은 데이터사이언스/ML 프로젝트를 간단하게 배포할 수 있는 웹어플리케이션으로, 최근에 많은 관심을 받고 있습니다. 이번 포스트에서는 Streamlit의 간단한 소개와 기본 기능들을 훑어보겠습니다.
  2020-03-13-intro-to-streamlit/streamlit_logo.png &amp;ldquo;Source: streamlit.io&amp;rdquo;)    Source: streamlit.io   Streamlit 이란? Streamlit(스트림릿)은 2019년 하반기에 갑작스레 등장한(?) 파이썬 기반의 웹어플리케이션 툴이다. Medium 플랫폼에서 Streamlit이라는 키워드가 보이는 글이 추천되는 것을 자주 보게 되었는데, &amp;ldquo;데이터사이언스/머신러닝 프로젝트를 웹 어플리케이션에 배포&amp;quot;하는데 아주 편리한 툴이라는 설명이 눈길을 사로 잡았다.
&amp;amp;nbsp
나에게 있어 Streamlit나 Dash 같은 웹어플리케이션의 장점을 꼽자면;</description>
    </item>
    
    <item>
      <title>[KR] Pandas 1.0.0 : 바뀐 점을 ARABOJA</title>
      <link>https://lucaseo.github.io/posts/2020-01-16-pandas-new-release/</link>
      <pubDate>Thu, 16 Jan 2020 14:24:01 +0900</pubDate>
      
      <guid>https://lucaseo.github.io/posts/2020-01-16-pandas-new-release/</guid>
      <description>Major Release !! Pandas 1.0.0 import pandas as pd로 우리에게 익숙한 Pandas. 데이터 분석을 위한 라이브러리라는 사실을 모르는 사람은 거의 없을 것이다. 하지만 부끄럽게도 나는 판다스의 버전조차 모른 상태로 여태껏 공식 문서와 Stackoverflow를 통해서만 사용하고 있었다. 마침 1월 9일 Pandas 1.0.0이 배포되었고, 이번 기회에 1.0.0에서 평소 자주 썼던 부분들을 위주로 중요한 업데이트들을 훑어보고 정리해보고자 한다.
 dataframe.info() 깔끔해진 DataFrame summary DataFrame 요약 기능이 조금 보기 좋은 형태로 개선되었다.
다음과 같은 예제 DataFrame이 있다고 할 때,</description>
    </item>
    
  </channel>
</rss>
